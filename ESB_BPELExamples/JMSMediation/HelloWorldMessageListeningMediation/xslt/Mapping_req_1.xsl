<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/Mapping_req_1.map" md5sum="f7d904b84c64bbcd4ca266d25e137c19" version="8.0.200" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		Mapping_req_1.map
*   Map declaration(s):	Mapping_req_1
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FHelloWorldMessageListeningMediation%252FHelloWorldMesageListeningInterface%257DreadMesasgeRequestMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FHelloWorldMessageListeningMediation%252FProcessMessageInterface%257DprocessMessageRequestMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xltxe="http://www.ibm.com/xmlns/prod/xltxe-j"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://HelloWorldMessageListeningMediation"
    xmlns:in2="wsdl.http://HelloWorldMessageListeningMediation/HelloWorldMesageListeningInterface"
    xmlns:in3="http://HelloWorldMessageListeningMediation/HelloWorldMesageListeningInterface"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out="http://HelloWorldMessageListeningMediation/ProcessMessageInterface"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:out2="wsdl.http://HelloWorldMessageListeningMediation/ProcessMessageInterface"
    xmlns:map="http://HelloWorldMessageListeningMediation/xslt/Mapping_req_1"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="in in2 in3 str set math fn exsl date map xltxe msl"
    version="2.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io2:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:Mapping_req_12">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io2:smo" mode="map:Mapping_req_1"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:Mapping_req_1">
    <io2:smo>
      <!-- a structural mapping: "headers"(HeadersType) to "headers"(HeadersType) -->
      <xsl:copy-of select="headers" copy-namespaces="yes"/>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out2:processMessageRequestMsg'"/>
        </xsl:attribute>
        <out:processMessage>
          <!-- a simple data mapping: "body/in3:readMesasge/inputMessage/name"(string) to "input1"(string) -->
          <xsl:element name="input1">
            <xsl:value-of select="body/in3:readMesasge/inputMessage/name"/>
          </xsl:element>
        </out:processMessage>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:Mapping_req_12">
    <xsl:param name="smo"/>
    <!-- a structural mapping: "$smo/headers"(HeadersType) to "headers"(HeadersType) -->
    <xsl:copy-of select="$smo/headers" copy-namespaces="yes"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out2:processMessageRequestMsg'"/>
      </xsl:attribute>
      <out:processMessage>
        <!-- a simple data mapping: "$smo/body/in3:readMesasge/inputMessage/name"(string) to "input1"(string) -->
        <xsl:element name="input1">
          <xsl:value-of select="$smo/body/in3:readMesasge/inputMessage/name"/>
        </xsl:element>
      </out:processMessage>
    </body>
  </xsl:template>
</xsl:stylesheet>
